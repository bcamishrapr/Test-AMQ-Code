<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <!--<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
	   <property name="brokerURL" value="failover:(tcp://localhost:61616)"/>
	   <property name="userName" value="admin"/>
	   <property name="password" value="admin"/>
   </bean>-->
   <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="tcp://localhost:61616" />
        <property name="userName" value="admin"/>
           <property name="password" value="admin"/>
    </bean>

    <camelContext id="cbr-example-context" xmlns="http://camel.apache.org/schema/blueprint" streamCache="true">

		    <dataFormats>
			    <json id="jsonOrder" library="Jackson"/>
		    </dataFormats>
	    <route id="cbr-route">
	   <from uri="restlet:http://localhost:8080/api/getfirstdetails?restletMethod=POST"/>

	    <unmarshal ref="jsonOrder"/>

          <log id="_log2" message="The Hit recieved for order and the input passed is ${body}"/>
	  <setHeader headerName="CamelFileName"><simple>${body[filename]}</simple></setHeader>
	  
	  <setBody><simple>Hello Prasoon!Data is going for Queue</simple></setBody>
	  <to uri="Activemq:queue:testQueue"/>
	  <to id="_to4" uri="file:///home/prasoon/workspace1/FirstProject/work/cbr/output/others/"/>
	  <log message="File name is ${file:name} ** ${body} size=${header.CamelFileLength}"/>
	  <removeHeaders pattern="*" excludePattern="CamelFileName"/>
	    <setBody><simple>{"filename generated":"${file:name}"}</simple></setBody>
	    <setHeader headerName="Content-Type" > <simple> application/json</simple></setHeader>
	    <setHeader headerName="CamelRestletResponse"><simple>${body}</simple></setHeader>


			 
        </route>
    </camelContext>
</blueprint>
